//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float   xy  
// ATTRIBUTE                6   xy          6     NONE   float   xy  
// ATTRIBUTE               13   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// VELOCITY_PREV_POS        0   xyzw        4     NONE   float   xyzw
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_constantbuffer CB1[106], immediateIndexed
dcl_constantbuffer CB2[5], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xy
dcl_input v6.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xy
dcl_output o4.xyzw
dcl_output_siv o5.xyzw, position
dcl_temps 13
imul null, r0.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.xxxx, t0.xyzw
imad r2.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r0.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r2.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r2.wwww, t0.xyzw
mul r5.xyzw, r5.xyzw, v4.yyyy
mul r6.xyzw, r6.xyzw, v4.yyyy
mul r7.xyzw, r7.xyzw, v4.yyyy
mad r1.xyzw, v4.xxxx, r1.xyzw, r5.xyzw
mad r3.xyzw, v4.xxxx, r3.xyzw, r6.xyzw
mad r4.xyzw, v4.xxxx, r4.xyzw, r7.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r0.zzzz, t0.xyzw
imad r6.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.yyyy, t0.xyzw
mad r1.xyzw, v4.zzzz, r5.xyzw, r1.xyzw
mad r3.xyzw, v4.zzzz, r7.xyzw, r3.xyzw
mad r4.xyzw, v4.zzzz, r8.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r0.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.wwww, t0.xyzw
mad r1.xyzw, v4.wwww, r5.xyzw, r1.xyzw
mad r3.xyzw, v4.wwww, r7.xyzw, r3.xyzw
mad r4.xyzw, v4.wwww, r8.xyzw, r4.xyzw
dp3 r5.x, r1.xyzx, v1.xyzx
dp3 r5.y, r3.xyzx, v1.xyzx
dp3 r5.z, r4.xyzx, v1.xyzx
dp3 r5.w, r1.xyzx, v2.xyzx
dp3 r7.x, r3.xyzx, v2.xyzx
dp3 r7.y, r4.xyzx, v2.xyzx
mov r8.xyz, v0.xyzx
mov r8.w, l(1.000000)
dp4 r7.z, r1.xyzw, r8.xyzw
dp4 r7.w, r3.xyzw, r8.xyzw
dp4 r9.x, r4.xyzw, r8.xyzw
mul r9.yzw, r7.wwww, cb2[1].xxyz
mad r9.yzw, cb2[0].xxyz, r7.zzzz, r9.yyzw
mad r9.xyz, cb2[2].xyzx, r9.xxxx, r9.yzwy
add r10.xyz, cb1[62].xyzx, cb2[3].xyzx
add r9.xyz, r9.xyzx, r10.xyzx
mul r10.xyzw, r9.yyyy, cb1[1].xyzw
mad r10.xyzw, r9.xxxx, cb1[0].xyzw, r10.xyzw
mad r9.xyzw, r9.zzzz, cb1[2].xyzw, r10.xyzw
add o5.xyzw, r9.xyzw, cb1[3].xyzw
mul r9.xyz, cb2[0].xyzx, cb2[4].xxxx
mul r10.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r11.xyz, cb2[2].xyzx, cb2[4].zzzz
mul r12.xyz, r5.yyyy, r10.xyzx
mad r12.xyz, r5.xxxx, r9.xyzx, r12.xyzx
mad o0.xyz, r5.zzzz, r11.xyzx, r12.xyzx
mul r5.xyz, r7.xxxx, r10.xyzx
mad r5.xyz, r5.wwww, r9.xyzx, r5.xyzx
mad o1.xyz, r7.yyyy, r11.xyzx, r5.xyzx
mul o1.w, v2.w, cb2[4].w
add r5.xyw, cb0[7].xyxz, cb1[105].xyxz
if_nz cb0[8].x
  ld_indexable(buffer)(float,float,float,float) r7.xyzw, r0.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r2.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r2.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.xyzw, r0.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r2.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.wwww, t1.xyzw
  mul r11.xyzw, r11.xyzw, v4.yyyy
  mul r12.xyzw, r12.xyzw, v4.yyyy
  mul r2.xyzw, r2.xyzw, v4.yyyy
  mad r7.xyzw, v4.xxxx, r7.xyzw, r11.xyzw
  mad r9.xyzw, v4.xxxx, r9.xyzw, r12.xyzw
  mad r2.xyzw, v4.xxxx, r10.xyzw, r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r0.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.xyzw, r6.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r6.yyyy, t1.xyzw
  mad r7.xyzw, v4.zzzz, r10.xyzw, r7.xyzw
  mad r9.xyzw, v4.zzzz, r11.xyzw, r9.xyzw
  mad r2.xyzw, v4.zzzz, r12.xyzw, r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.wwww, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r6.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t1.xyzw
  mad r1.xyzw, v4.wwww, r0.xyzw, r7.xyzw
  mad r3.xyzw, v4.wwww, r10.xyzw, r9.xyzw
  mad r4.xyzw, v4.wwww, r6.xyzw, r2.xyzw
endif 
dp4 r0.x, r1.xyzw, r8.xyzw
dp4 r0.y, r3.xyzw, r8.xyzw
dp4 r0.z, r4.xyzw, r8.xyzw
mov r0.w, l(1.000000)
mov r1.x, cb0[4].x
mov r1.y, cb0[5].x
mov r1.z, cb0[6].x
mov r1.w, r5.x
dp4 r1.x, r0.xyzw, r1.xyzw
mov r2.x, cb0[4].y
mov r2.y, cb0[5].y
mov r2.z, cb0[6].y
mov r2.w, r5.y
dp4 r1.y, r0.xyzw, r2.xyzw
mov r5.x, cb0[4].z
mov r5.y, cb0[5].z
mov r5.z, cb0[6].z
dp4 r0.x, r0.xyzw, r5.xyzw
mul r0.yzw, r1.yyyy, cb1[84].xxyw
mad r0.yzw, r1.xxxx, cb1[83].xxyw, r0.yyzw
mad r0.xyz, r0.xxxx, cb1[85].xywx, r0.yzwy
add o4.xyw, r0.xyxz, cb1[86].xyxw
add o4.z, -cb0[8].y, l(1.000000)
mov o0.w, l(0)
mov o2.xy, v5.xyxx
mov o3.xy, v6.xyxx
ret 
// Approximately 0 instruction slots used
