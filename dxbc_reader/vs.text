class INPUT {
	POSITION;
	TEXCOORD1;
	NORMAL;
	SV_VERTEXID;
	SV_InstanceID;
}
class OUT {
	TEXCOORD1;
	TEXCOORD2;
	TEXCOORD3;
	SV_POSITION;
}
void main(INPUT in) {
	            bitmask = (((1 << table: 00000000006b5f80)-1) << table: 00000000006b6040) & 0xffffffff
            dest = ((table: 00000000006b5f00 << table: 00000000006b6040) & bitmask) | (table: 00000000006b62c0 & ~bitmask);
	r0.w = 0x02000000 & cb11[r0.z + 0].w ;
	r0.w = 1 < r0.w;
	r0.w = r0.w ? 0 : in.SV_VERTEXID.x;
	            bitmask = (((1 << table: 00000000006b9bf0)-1) << table: 00000000006b9db0) & 0xffffffff
            dest = ((table: 00000000006b95f0 << table: 00000000006b9db0) & bitmask) | (table: 00000000006b9670 & ~bitmask);
	r0.w = r0.w + r1.x;
	r0.w = tex2D(t0, r0.ww).x //ld_indexable;
	out.TEXCOORD0.w = r0.w;
	r0.w = in.SV_InstanceID.x << 2;
	r1.x = dot(cb11[r0.w + 0].xyzx, in.NORMAL.xyzx);
	r1.y = dot(cb11[r0.x + 0].xyzx, in.NORMAL.xyzx);
	r1.z = dot(cb11[r0.y + 0].xyzx, in.NORMAL.xyzx);
	r1.w = dot(r1.xyzx, r1.xyzx);
	r1.w = rsqrt(r1.w);
	out.TEXCOORD0.xyz = r1.www * r1.xyz;
	out.TEXCOORD1.xy = in.TEXCOORD1.xy*cb11[r0.z + 0].xx + cb11[r0.z + 0].yz;
	r1.w = -cb12[7].x + cb11[r0.w + 0].w;
	r1.xyz = cb11[r0.w + 0].xyz;
	r2.xyz = in.POSITION.xyz;
	r2.w = 1.0;
	r1.x = dot(r1.xyzw, r2.xyzw);
	r3.w = -cb12[7].y + cb11[r0.x + 0].w;
	r3.xyz = cb11[r0.x + 0].xyz;
	r1.y = dot(r3.xyzw, r2.xyzw);
	r3.w = -cb12[7].z + cb11[r0.y + 0].w;
	r3.xyz = cb11[r0.y + 0].xyz;
	r1.z = dot(r3.xyzw, r2.xyzw);
	out.TEXCOORD2.xyz = r1.xyz + cb12[7].xyz;
	r0.xyzw = r1.yyyy * cb12[1].xyzw;
	r0.xyzw = cb12[0].xyzw*r1.xxxx + r0.xyzw;
	r0.xyzw = cb12[2].xyzw*r1.zzzz + r0.xyzw;
	out.SV_POSITION.xyzw = r0.xyzw + cb12[13].xyzw;
	return;
}