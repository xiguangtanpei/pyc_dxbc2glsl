//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// SV_VERTEXID              0   x           3   VERTID    uint   x   
// SV_InstanceID            0   x           4   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 3   xy          1     NONE   float   xy  
// TEXCOORD                 4   xyz         2     NONE   float   xyz 
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB12[14], immediateIndexed
dcl_constantbuffer CB11[64], dynamicIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input_sgv v3.x, vertex_id
dcl_input_sgv v4.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_temps 4
bfi r0.xyz, l(30, 30, 30, 0), l(2, 2, 2, 0), v4.xxxx, l(1, 2, 3, 0)
and r0.w, l(0x02000000), cb11[r0.z + 0].w
ult r0.w, l(1), r0.w
movc r0.w, r0.w, l(0), v3.x
bfi r1.x, l(25), l(2), cb11[r0.z + 0].w, l(0)
iadd r0.w, r0.w, r1.x
ld_indexable(buffer)(float,float,float,float) r0.w, r0.wwww, t0.yzwx
mov o0.w, r0.w
ishl r0.w, v4.x, l(2)
dp3 r1.x, cb11[r0.w + 0].xyzx, v2.xyzx
dp3 r1.y, cb11[r0.x + 0].xyzx, v2.xyzx
dp3 r1.z, cb11[r0.y + 0].xyzx, v2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o0.xyz, r1.wwww, r1.xyzx
mad o1.xy, v1.xyxx, cb11[r0.z + 0].xxxx, cb11[r0.z + 0].yzyy
add r1.w, -cb12[7].x, cb11[r0.w + 0].w
mov r1.xyz, cb11[r0.w + 0].xyzx
mov r2.xyz, v0.xyzx
mov r2.w, l(1.000000)
dp4 r1.x, r1.xyzw, r2.xyzw
add r3.w, -cb12[7].y, cb11[r0.x + 0].w
mov r3.xyz, cb11[r0.x + 0].xyzx
dp4 r1.y, r3.xyzw, r2.xyzw
add r3.w, -cb12[7].z, cb11[r0.y + 0].w
mov r3.xyz, cb11[r0.y + 0].xyzx
dp4 r1.z, r3.xyzw, r2.xyzw
add o2.xyz, r1.xyzx, cb12[7].xyzx
mul r0.xyzw, r1.yyyy, cb12[1].xyzw
mad r0.xyzw, cb12[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb12[2].xyzw, r1.zzzz, r0.xyzw
add o3.xyzw, r0.xyzw, cb12[13].xyzw
ret 
// Approximately 0 instruction slots used
